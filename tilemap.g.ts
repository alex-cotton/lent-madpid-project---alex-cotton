// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level":
            case "level":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 . . . . . . . 2 . . . 2 
2 . 2 2 2 2 2 2 2 . . 2 2 2 . 2 
2 . . . . . . . . 2 . . . 2 . 2 
2 2 . 2 2 2 2 2 . . 2 . . . . 2 
2 . . . . 2 . . 2 . 2 2 2 . . 2 
2 . 2 2 . 2 . . . . . . 2 2 . 2 
2 . . . . 2 . . 2 2 2 . . . . 2 
2 . . . . 2 2 . . . . . . . . 2 
2 . . . . . . 2 2 . 2 2 2 . . 2 
2 . 2 2 2 2 . . 2 . 2 . 2 . 2 2 
2 . . 2 . . 2 . 2 . 2 . 2 . . 2 
2 2 . 2 . 2 . . . . 2 2 2 2 . 2 
2 . . 2 . 2 . 2 2 2 2 . . . . 2 
2 . . . . 2 . . . . . . 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.hazardWater,sprites.castle.shrub,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level_0":
            case "level_0":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . 2 . . . . . . 2 
2 2 2 2 2 . 2 . . . 2 . 2 2 2 2 
2 2 . . . . . . 2 . . . . . . 2 
2 . . 2 2 . 2 2 2 2 2 2 2 2 . 2 
2 . . 2 2 . . . . . . . 2 . . 2 
2 . . 2 2 2 . . . 2 2 . 2 . 2 2 
2 . . . . 2 . . . . . . . . . 2 
2 . . . . 2 . . . . 2 2 2 2 2 2 
2 . . 2 . . . . . . . . . . 2 2 
2 . . 2 . . . 2 2 2 2 . . . . 2 
2 . . 2 . . . . . . . 2 2 2 . 2 
2 . . 2 . 2 2 2 2 2 2 2 . . . 2 
2 . . 2 2 . . . . . . 2 . . 2 2 
2 . . . . . . . . . . 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.hazardWater,sprites.dungeon.hazardLava1,sprites.castle.saplingPine], TileScale.Sixteen);
            case "level_1":
            case "level_1":return tiles.createTilemap(hex``, img`
2 2 2 . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 . . 2 2 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . 2 2 2 2 2 2 
2 . 2 2 2 2 . 2 2 2 . . . . 2 . 
2 . . . . 2 2 2 2 2 . 2 2 . 2 . 
2 . . . . 2 . . . 2 . . . . 2 . 
2 2 2 2 . 2 . 2 . 2 2 2 . 2 . . 
. . . . . . . 2 . . . 2 . 2 . . 
. . 2 2 2 2 2 2 2 . 2 2 . 2 . 2 
2 . 2 . . . . . 2 . . . . 2 . . 
. . 2 . 2 2 2 . 2 2 2 2 2 2 2 . 
. 2 . . 2 2 2 . 2 2 2 2 . . . . 
. . . . . . 2 . . . . . . . 2 2 
2 2 2 2 2 2 2 2 2 . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,sprites.dungeon.hazardWater,sprites.castle.saplingOak], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . 2 . . . . . . 2 
2 2 2 2 2 . 2 . . . 2 . 2 2 2 2 
2 2 . . . . . . 2 . . . . . . 2 
2 . . 2 2 . 2 2 2 2 2 2 2 2 . 2 
2 . . 2 2 . . . . . . . 2 . . 2 
2 . . 2 2 2 . . . 2 2 . 2 . 2 2 
2 . . . . 2 . . . . . . . . . 2 
2 . . . . 2 . . . . 2 2 2 2 2 2 
2 . . 2 . . . . . . . . . . 2 2 
2 . . 2 . . . 2 2 2 2 . . . . 2 
2 . . 2 . . . . . . . 2 2 2 . 2 
2 . . 2 . 2 2 2 2 2 2 2 . . . 2 
2 . . 2 2 . . . . . . 2 . . 2 2 
2 . . . . . . . . . . 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.hazardWater,sprites.dungeon.hazardLava1,sprites.castle.saplingPine], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 2 . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 . . 2 2 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . 2 2 2 2 2 2 
2 . 2 2 2 2 . 2 2 2 . . . . 2 . 
2 . . . . 2 2 2 2 2 . 2 2 . 2 . 
2 . . . . 2 . . . 2 . . . . 2 . 
2 2 2 2 . 2 . 2 . 2 2 2 . 2 . . 
. . . . . . . 2 . . . 2 . 2 . . 
. . 2 2 2 2 2 2 2 . 2 2 . 2 . 2 
2 . 2 . . . . . 2 . . . . 2 . . 
. . 2 . 2 2 2 . 2 2 2 2 2 2 2 . 
. 2 . . 2 2 2 . 2 2 2 2 . . . . 
. . . . . . 2 . . . . . . . 2 2 
2 2 2 2 2 2 2 2 2 . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,sprites.dungeon.hazardWater,sprites.castle.saplingOak], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 . . . . . . . 2 . . . 2 
2 . 2 2 2 2 2 2 2 . . 2 2 2 . 2 
2 . . . . . . . . 2 . . . 2 . 2 
2 2 . 2 2 2 2 2 . . 2 . . . . 2 
2 . . . . 2 . . 2 . 2 2 2 . . 2 
2 . 2 2 . 2 . . . . . . 2 2 . 2 
2 . . . . 2 . . 2 2 2 . . . . 2 
2 . . . . 2 2 . . . . . . . . 2 
2 . . . . . . 2 2 . 2 2 2 . . 2 
2 . 2 2 2 2 . . 2 . 2 . 2 . 2 2 
2 . . 2 . . 2 . 2 . 2 . 2 . . 2 
2 2 . 2 . 2 . . . . 2 2 2 2 . 2 
2 . . 2 . 2 . 2 2 2 2 . . . . 2 
2 . . . . 2 . . . . . . 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.hazardWater,sprites.castle.shrub,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . 2 . . . . . . . . . 2 
2 . 2 2 . . . 2 2 2 2 . . 2 . 2 
2 . 2 . 2 2 . . . . . . . 2 . 2 
2 . . . . . 2 2 2 2 2 2 2 . . 2 
2 2 . 2 2 . . . . . . 2 2 . 2 2 
2 . . 2 . 2 . . 2 2 . . . 2 2 2 
2 . . 2 . . 2 2 2 . . 2 . . . . 
2 . . 2 . . 2 . 2 . 2 2 . 2 . . 
. . 2 2 . . 2 . . . 2 . . 2 . . 
2 . . . . 2 2 2 2 2 2 . . 2 . . 
. . 2 2 2 . . . . 2 2 . 2 2 . . 
2 . . . . . . 2 . . . . 2 . . 2 
. . 2 2 2 2 . . 2 2 . 2 2 . 2 2 
2 . . . . . . . . . . . . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.dungeon.hazardLava1,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.dungeon.hazardLava1,sprites.dungeon.chestOpen], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex`1000100001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 2 . . . . . . 2 
2 2 2 . 2 2 . . . . 2 2 2 2 2 2 
2 2 . . 2 2 . 2 . 2 . . . . . . 
2 2 . 2 . . . . . . . . 2 2 . . 
2 . . . . 2 2 2 . 2 . 2 2 . . 2 
2 . 2 2 . . 2 2 . . 2 . . . 2 2 
2 . . 2 2 . 2 2 2 . 2 . 2 . . 2 
2 2 . . 2 . . . . 2 2 . 2 2 . . 
2 . . . 2 . 2 2 . . . . 2 . . . 
2 . 2 . . . 2 . . 2 . 2 . . 2 2 
2 . . 2 . 2 2 . 2 2 . 2 2 2 2 2 
2 . . . . . . . . . . 2 . . . 2 
2 . . . 2 . . 2 . . . 2 2 2 . 2 
2 2 . . . . . . . . . . . . . 2 
2 2 2 2 2 . . . . . . 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,sprites.dungeon.collectibleInsignia,sprites.dungeon.chestOpen], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile1], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex`10001000020808080808080808080808080808030700000000000000000000000000000507000600060606000606060606060005070000000000060000000000000600050706000606000606060006060006000507000000060000000000000609060005070006000600060606060006060600050709000006000009000600000006000507060006060600060006000600060005070600060000000600000006000600050706000600060606060606060006000507060006000600000000000000060005070000060006000606060606060600050700060600060000000900000006060507000900000600060000000600000a0504060606060606060606060606060601`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . 2 . 2 2 2 . 2 2 2 2 2 2 . 2 
2 . . . . . 2 . . . . . . 2 . 2 
2 2 . 2 2 . 2 2 2 . 2 2 . 2 . 2 
2 . . . 2 . . . . . . 2 . 2 . 2 
2 . 2 . 2 . 2 2 2 2 . 2 2 2 . 2 
2 . . . 2 . . . . 2 . . . 2 . 2 
2 2 . 2 2 2 . 2 . 2 . 2 . 2 . 2 
2 2 . 2 . . . 2 . . . 2 . 2 . 2 
2 2 . 2 . 2 2 2 2 2 2 2 . 2 . 2 
2 2 . 2 . 2 . . . . . . . 2 . 2 
2 . . 2 . 2 . 2 2 2 2 2 2 2 . 2 
2 . 2 2 . 2 . . . 2 . . . 2 2 2 
2 . . . . 2 . 2 . . . 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterSouth0,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile":
            case "tile1":return tile1;
            case "tile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
